version: "3.7"

volumes:
  ### Holding the qa-demo src code
  qa-demo-data:

  ### qa-demo database volume
  qa-demo-db:

services:

  #####################
  ### Main services ###
  #####################

  ### services router
  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    profiles: ["qa-demo"]
    command: --api.insecure=true --providers.docker
    ports:
    - '8000:80'
    # - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ### Database service
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    profiles: ["qa-demo"]
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    volumes:
    #  - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
    - qa-demo-db:/var/lib/mysql # Persist data using volumes
    # - /var/lib/mysql:/var/lib/mysql # Persist data using bind mounts

  ### PHP service with a drupal demo installed
  qa-demo:
    image: dxpr/qa-demo:$DXPR_DEMO_TAG
    container_name: "${PROJECT_NAME}_qa_demo"
    profiles: ["qa-demo"]
    depends_on:
    - mariadb
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      PHP_MEMORY_LIMIT: 1024M

  ### Web server
  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    profiles: ["qa-demo"]
    depends_on:
    - qa-demo
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: $NGINX_BACKEND_HOST
      NGINX_SERVER_ROOT: $NGINX_SERVER_ROOT
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

  ### TODO: Remove if not needed
  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    profiles: ["qa-demo"]
    labels:
    - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
    - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  #####################################
  ### Testing composer installation ###
  #####################################
  composer-1:
    image: dxpr/composer:1
    profiles: ["github-actions"]
    build:
      context: ./hack/composer
      args:
        COMPOSER_VERSION: "1"
    working_dir: /opt/app
    command: bash run-dev.sh
    tty: true
    environment:
      DXPR_ACCESS_TOKEN: ${DXPR_ACCESS_TOKEN}
    volumes:
      - .:/opt/app

  composer-2:
    image: dxpr/composer:2
    profiles: ["github-actions"]
    build:
      context: ./hack/composer
      args:
        COMPOSER_VERSION: "2"
    working_dir: /opt/app
    command: bash run-dev.sh
    tty: true
    environment:
      DXPR_ACCESS_TOKEN: ${DXPR_ACCESS_TOKEN}
    volumes:
      - .:/opt/app
